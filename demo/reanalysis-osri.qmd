---
title: "Reanalysis OSRI"
format: html
editor: visual
---

In this application, we perform a reanalysis of the data reported in De Roover & Vermunt (2019):

De Roover, K., & Vermunt, J. K. (2019). On the exploratory road to unraveling factor loading non-invariance: A new multigroup rotation approach. Structural Equation Modeling: A Multidisciplinary Journal, 26(6), 905-923.

# Data preparation

## Imports

```{r}
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
rm(list = ls())
```

## Set seed

```{r}
set.seed(17092024)
```

## Loading the data

Data available on OSF: <https://osf.io/rvhsw>

```{r}
OSRI <- read.csv("../data/OSRI_osfDeRoover.csv", sep = ";")
```

```{r}
table(OSRI$orientation)
```

The total sample size matches what is reported in De Roover & Vermunt (2019) but group sizes not. Upon checking if they erroneously used one of the questionnaire items as the indicator of sexual orientation, this appeared to be the case (the scores on Q1 were used as the indicator of sexual orientation). This mistake probably also explains why their results deviate strongly from what can be expected based upon the design of the questionnaire.

## Data wrangling

Group by orientation and standardize per group. Note: 1= Heterosexual, 2 = Bisexual, 3 = Homosexual, 4 = Asexual, 5 = Other.

```{r}
matrix1 <- as.matrix(OSRI[OSRI$orientation == 1, 1:44])
matrix1 <- scale(matrix1, center = TRUE, scale = TRUE)
matrix2 <- as.matrix(OSRI[OSRI$orientation == 2, 1:44])
matrix2 <- scale(matrix2, center = TRUE, scale = TRUE)
matrix3 <- as.matrix(OSRI[OSRI$orientation == 3, 1:44])
matrix3 <- scale(matrix3, center = TRUE, scale = TRUE)
matrix4 <- as.matrix(OSRI[OSRI$orientation == 4, 1:44])
matrix4 <- scale(matrix4, center = TRUE, scale = TRUE)
matrix5 <- as.matrix(OSRI[OSRI$orientation == 5, 1:44])
matrix5 <- scale(matrix5, center = TRUE, scale = TRUE)

DATA <- list(matrix1, matrix2, matrix3, matrix4, matrix5)
G <- 5
```

We set the number of factors in correspondence with the design of the questionnaire (2 factors):

```{r}
R <- 2
```

# Modelling

## Imports

```{r}
# load MASS
library(MASS)
```

```{r}
# load needed functions
source("../R/initial-loadings.R")
source("../R/multistart.R")
source("../R/pstr.R")
source("../R/joint-spca-finalizing.R")
source("../R/is-jspca.R")
source("../R/seqstrategy.R")
source("../R/performance-measures.R")
```

## Model selection

To determine the number of nonzero loadings and the strength of fusion of the loadings between the five groups, the sequential model selection strategy is used. Note that this takes a bit of time (a few minutes).

```{r}
model <- seqstrategy(DATA, R = R, SP = 0.9, ALPH = 0.1, THR = 0.05) # sequential strategy
```

We inspect the results as follows:

```{r}
model$details
model$cardinality
model$lambda
```

Note that the selected number of nonzero loadings is close to what can be expected as the questionnaire is designed to have 22 items that measure masculinity and 22 femininity.

## Stabilize solution

To save computing time, the sequential strategy uses a single starting value. Therefore, for the selected model, we perform an additional analysis that is based on multiple starting values. This analysis takes a few minutes.

```{r}
selmodel <- MULTISTART(DATA, R, CARD = model$cardinality, LAMBDA = model$lambda, SP = seq(0.1, 0.9, by = 0.1), ALPH = seq(0.1, 0.9, by = 0.1), MAXITER = 20, EPS = 1e-4)
L <- selmodel$loadings
Loadings <- round(cbind(L[[1]], L[[2]], L[[3]], L[[4]], L[[5]]), 2)
colnames(Loadings) <- c("He1","He2","Bi1","Bi2","Ho1","Ho2","A1","A2","O1","O2")
Loadings
```

The loadings estimated by Regularized MGEAFA are approximately equal to the correlation of the observed variable with the estimated factor scores: the fusion penalty introduces shrinkage (over groups) and the cardinality constraint results in zero loadings. We illustrate this with the loadings of the variables on the first factor for the first group.

```{r}
rbind(cor(selmodel$scores[[1]][, 1], matrix1), selmodel$loadings[[1]][, 1])
```

## Inspect results

Here, we focus on inpecting the similarity of the loadings over groups. First, we create two matrices, one with the loadings on the first factor and one with those on the second factor.

```{r}
concL1 <- c()
concL2 <- c()
for (g in 1:G) {
  concL1 <- cbind(concL1, L[[g]][, 1])
  concL2 <- cbind(concL2, L[[g]][, 2])
}
```

```{r}
concL1
concL2
```

To get an indication of the extent of measure noninvariance of each of the items, dissimilarity over the groups is calculated as the standard deviation of the loadings over groups (per factor and summed):

```{r}
round(sqrt(diag(var(t(concL1)))) + sqrt(diag(var(t(concL2)))), 3)
# 10 items displaying noninvariance:32, 12, 14, 25, 22, 20, 13, 21, 11, 38
```

We also check if there are items that load (almost) 0 on both factors as this indicates that these should probably be removed from the questionnaire.

```{r}
index <- 1:44
index[rowSums(abs(cbind(concL1, concL2))) < 0.05]
# items 1 and 7
```

The following items have cross loadings and therefore deviate from the expected structure (each item loading only on one of the two factors):

```{r}
index[abs(concL1) > 0.05 & abs(concL2) > 0.05]
# items 9,13,21,22,34
```

## Save results

Write model selection results to csv:

```{r}
write.table(model$details, file = "ReanalysisOSRIGeneratedFiles/OSRI_modelselection.txt", dec = ",", sep = "\t")
```

Write loadings to csv:

```{r}
write.table(Loadings, file = "ReanalysisOSRIGeneratedFiles/OSRI_loadings_RegMGEFA.txt", dec = ",", sep = "\t")
```

Save concatenaed loadings over groups and per factor:

```{r}
save(concL1, file = "ReanalysisOSRIGeneratedFiles/OSRI_concl1.Rdata")
save(concL1, file = "ReanalysisOSRIGeneratedFiles/OSRI_concl2.Rdata")
```
